# -*- mode: org; -*-
#+TITLE: BDD + NOTES
#+AUTHOR: Peter Moresi
#+OPTIONS: num:nil


#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>

#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>

* Overview

*BDD + NOTES* is a software development methodology that combines two methodologies:

  1. Software specified through /concrete examples/ written for automated test execution with a *Behavior Driven Development (BDD)* test framework.

  2. Software created as /notes/ that describe the program logic in a natural language for human understanding and makes use of a *Literate Programming* toolchain.

BDD and Literate Programming are used together to create a better solution then when either methodology is used alone.

* Tools

  There are many tools for BDD and literate programming. It is important that you pick the best one for yourself based on your needs.

  The combination that I typically use is:

   - [[http://cucumber.io][Cucumber]] with [[http://ruby-lang.org][Ruby]]
   - [[http://org-mode.org][Org-Mode]] with whatever gets the job done with the best quality in least time

   Org-Mode is a powerful tool for literate programming with a huge impact on your workflow. The learning curve is steep. You will love it or hate it.

   The quick and dirty literate programming style used by docco and friends is great when you want to augment your workflow and not completely replace it. The
   large number or ports means that you will probably be able to find one for your programming language.

   1. C# Programmers

      - [[http://specflow.org][Specflow]] with C# or [[http://www.fitnesse.org/][Fitnesse]] with .Net fit
      - [[https://github.com/dontangg/nocco][nocco]] with C#

   2. Clojure/Java Programmers

      - [[http://www.fitnesse.org/][Fitnesse]] with Java
      - [[https://github.com/gdeer81/marginalia][Marginalia]] with Clojure

   3. Rails Programmers

      - [[http://cucumber.io][Cucumber]] with [[http://ruby-lang.org][Ruby]]
      - [[https://github.com/rtomayko/rocco][Rocco]] with Ruby

   4. Front-end or Node.js Programmers

      - [[http://www.fitnesse.org/][Fitnesse]] with Coffeescript
      - [[http://jashkenas.github.io/docco/][Docco]] with Coffeescript

   5. PHP Programmers

      - [[http://www.fitnesse.org/][Fitnesse]] with PHP
      - [[http://jquery-jkit.com/sourcemakeup/][sourceMakeup]] with PHP
      

   I wish you success building software with *BDD + NOTES*.
* What is a BDD Test Framework?

   BDD Test Framework is a software that executes and reports on concrete examples used to

   1. Describe the world before test execution
   2. Runs a system under tests
   3. Verifies the actual vs expected results


   Popular choices include Cucumber, Specflow and Fitnesse.

* What is a Literate Programming Toolchain?

  A literate programming toolchain is software that creates programming documenting from programming sources.

  Many tools can be used to accomplish this task. 

   - Some of them were designed specifically for this purpose like Web, NoWeb plus the modern version docco and similar. 
   - Org-Mode's general purpose markup langauge also supports literate programming through the standard Babel module which extends the general purpose document/spreadsheet capabilities with IDE-like capability. 
   - Other tools met this goal withough specifically being designed for literate programming. 
     - The commonly used JavaDoc program for the Java languages purposes excellent documentation.
     - Many other languages and/or environment contain similar capability.

   Any software that mets this capability may be considered a *literate programming toolchain*.

